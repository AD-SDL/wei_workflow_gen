[
  {
    "name": "Biometra",
    "tags": ["data_acquisition", "plate_reader"],
    "model": "Analytik Jena Biometra TRobot II",
    "interface": "wei_rest_node",
    "version": "0.1.0",
    "description": "Module for automating a Biometra thermocycler.",
    "github":"https://github.com/AD-SDL/biometra_module",
    "actions": [
      {
        "name": "run_protocol",
        "args": [
          {
            "name": "plate_type",
            "type": "int",
            "default": null,
            "required": true,
            "description": "Plate Type Definition."
          },
          {
            "name": "program",
            "type": "int",
            "default": null,
            "required": true,
            "description": "An identifier for the protocol to be run."
          }
        ],
        "files": []
      },
      {
        "name": "open_lid",
        "args": [
          {
            "name": "plate_type",
            "type": "int",
            "default": null,
            "required": true,
            "description": "Plate Type Definition."
          }
        ],
        "files": []
      },
      {
        "name": "close_lid",
        "args": [
          {
            "name": "plate_type",
            "type": "int",
            "default": null,
            "required": true,
            "description": "Plate Type Definition."
          }
        ],
        "files": []
      },
      {
        "name": "get_status",
        "args": [
          {
            "name": "plate_type",
            "type": "int",
            "default": null,
            "required": true,
            "description": "Plate Type Definition."
          }
        ],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "HiG4 Centrifuge",
    "tags": ["utility", "centrifuge", "sample_processing"],
    "model": "BioNex HiG 4 Automated Centrifuge",
    "interface": "wei_rest_node",
    "version": "0.1.0",
    "description": "Module for automating the HiG 4 Automated Centrifuge instrument.",
    "github":"https://github.com/AD-SDL/hig_centrifuge_module",
    "actions": [
      {
        "name": "spin",
        "args": [
          {
            "name": "gs",
            "type": "double",
            "default": null,
            "required": true,
            "description": "The number of G's to spin the sample at for the duration."
          },
          {
            "name": "accel_percent",
            "type": "double",
            "default": null,
            "required": true,
            "description": "How quickly to accelerate the centrifuge up to speed."
          },
          {
            "name": "decel_percent",
            "type": "double",
            "default": null,
            "required": true,
            "description": "How quickly to decelrate the centrifuge at the end of the spin."
          },
          {
            "name": "time_seconds",
            "type": "double",
            "default": null,
            "required": true,
            "description": "The time in seconds to spin the sample for."
          }
        ],
        "files": []
      },
      {
        "name": "open_shield",
        "args": [
          {
            "name": "bucket_index",
            "type": "int",
            "default": null,
            "required": true,
            "description": "Which bucket to present when opening the shield."
          }
        ],
        "files": []
      },
      {
        "name": "close_shield",
        "args": [],
        "files": []
      },
      {
        "name": "home",
        "args": [],
        "files": []
      },
      {
        "name": "abort_spin",
        "args": [],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Epoch2",
    "tags": ["data_acquisition", "plate_reader"],
    "model": "BioTek Epoch2 Plate Reader",
    "interface": "wei_rest_node",
    "version": "0.1.0",
    "description": "Module for automating the Epoch 2 platereader.",
    "github":"https://github.com/AD-SDL/epoch2_module",
    "actions": [
      { "name": "open", "args": [], "files": [] },
      { "name": "close", "args": [], "files": [] },
      {
        "name": "run_assay",
        "args": [
          {
            "name": "assay_name",
            "type": "str",
            "default": null,
            "required": true,
            "description": "Name of the assay to run"
          }
        ],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Barty Liquid Manager",
    "tags": ["liquid_handling", "ink_operations"],
    "model": "Barty Liquid Manager",
    "interface": "control_rest_node",
    "version": "1.0.0",
    "description": "Module for managing ink operations in motors - a low cost liquid handler.",
    "actions": [
      {
        "name": "drain_ink_all_motors",
        "args": [
          {
            "name": "volume",
            "type": "int",
            "default": 100,
            "required": false,
            "description": "Volume to drain from all motors in mL."
          }
        ],
        "files": []
      },
      {
        "name": "fill_ink_all_motors",
        "args": [
          {
            "name": "volume",
            "type": "int",
            "default": 60,
            "required": false,
            "description": "Volume to refill all motors in mL."
          }
        ],
        "files": []
      },
      {
        "name": "refill_ink",
        "args": [
          {
            "name": "motors",
            "type": "list",
            "default": null,
            "required": true,
            "description": "Specific motors to refill."
          },
          {
            "name": "volume",
            "type": "int",
            "default": 5,
            "required": false,
            "description": "Volume to refill in specified motors in mL."
          }
        ],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "URRobotModule",
    "tags": ["robotic_manipulation", "plate_handling", "plate_mover"],
    "model": "UR3, UR5, UR16",
    "description": "UR robots are 6 degrees of freedom manipulators. Different models of these robots allow carrying heavier payloads and reaching longer distances. This robot is mainly used in pick and place jobs.",
    "interface": "wei_rest_node",
    "version": "extracted_from_pyproject.toml",
    "github":"https://github.com/AD-SDL/ur_module",
    "actions": [
      {
        "name": "transfer",
        "description": "This action transfers a plate from a source robot location to a target robot location.",
        "args": [
          {
            "name": "source",
            "description": "Source location in the workcell for the robot to grab the plate from.",
            "type": "str",
            "required": true
          },
          {
            "name": "target",
            "description": "Transfer location in the workcell for the robot to transfer the plate to.",
            "type": "str",
            "required": true
          },
          {
            "name": "source_plate_rotation",
            "description": "Plate rotation for source location in the workcell.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Plate rotation for target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      },
      {
        "name": "remove_lid",
        "description": "This action removes the lid off of a plate.",
        "args": [
          {
            "name": "target",
            "description": "Target location in the workcell that the plate is currently at.",
            "type": "str",
            "required": true
          },
          {
            "name": "lid_height",
            "description": "Lid height of the target plate.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Rotation of plate at target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      },
      {
        "name": "replace_lid",
        "description": "This action places a lid on a plate with no lid.",
        "args": [
          {
            "name": "target",
            "description": "Target location in the workcell that the plate is currently at.",
            "type": "str",
            "required": true
          },
          {
            "name": "lid_height",
            "description": "Lid height of the target plate.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Rotation of plate at target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      }
    ],
    "resource_pools": []
  },
  {
    "name": "fom",
    "tags": ["gate_operations", "fom_process"],
    "model": "Unknown",
    "version": "0.0.1",
    "description": "Module for gate operations and running the fom process.",
    "github":"https://github.com/AD-SDL/fom_module",
    "actions": [
      {
        "name": "open_gate",
        "description": "Opens the gate based on a configuration.",
        "args": [
          {
            "name": "config",
            "type": "str",
            "required": true,
            "description": "Configuration settings to open the gate."
          }
        ],
        "files": []
      },
      {
        "name": "close_gate",
        "description": "Closes the gate based on a configuration.",
        "args": [
          {
            "name": "config",
            "type": "str",
            "required": true,
            "description": "Configuration settings to close the gate."
          }
        ],
        "files": []
      },
      {
        "name": "run_fom",
        "description": "Runs the fom process based on a configuration.",
        "args": [
          {
            "name": "config",
            "type": "str",
            "required": true,
            "description": "Configuration settings to run the fom process."
          }
        ],
        "files": []
      }
    ],
    "repo": "https://github.com/AD-SDL/fom_module.git"
  },
  {
    "name": "Sleep Module",
    "tags": ["utilities", "sleep"],
    "description": "A module that sleeps for a specified amount of time",
    "interface": "wei_rest_node",
    "version": "extracted_from_pyproject.toml",
    "github":"https://github.com/AD-SDL/sleep_module",
    "actions": [
      {
        "name": "sleep",
        "description": "Sleep for a specified amount of time",
        "args": [
          {
            "name": "t",
            "description": "The amount of time to sleep for, as an integer in seconds",
            "type": "int",
            "required": true
          }
        ],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Camera Module",
    "tags": ["data_acquisition", "camera"],
    "description": "A module that interfaces with a USB camera",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github":"https://github.com/AD-SDL/camera_module/tree/main",
    "actions": [
      {
        "name": "take_picture",
        "description": "Take a picture from the camera",
        "args": [
          {
            "name": "file_name",
            "description": "Name of the file to save the image to",
            "type": "str",
            "required": false,
            "default": "image.jpg"
          }
        ]
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Pf400 Robotic Arm",
    "tags": ["robotic_manipulation", "plate_handling", "plate_mover"],
    "model": "Precise Automation PF400",
    "description": "pf400 is a robot module that moves plates between two robot locations.",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github": "https://github.com/AD-SDL/pf400_module/tree/main",
    "actions": [
      {
        "name": "transfer",
        "description": "This action transfers a plate from a source robot location to a target robot location.",
        "args": [
          {
            "name": "source",
            "description": "Source location in the workcell for pf400 to grab plate from.",
            "type": "str",
            "required": true
          },
          {
            "name": "target",
            "description": "Transfer location in the workcell for pf400 to transfer plate to.",
            "type": "str",
            "required": true
          },
          {
            "name": "source_plate_rotation",
            "description": "Plate rotation for source location in the workcell.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Plate rotation for target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      },
      {
        "name": "remove_lid",
        "description": "This action removes the lid off of a plate",
        "args": [
          {
            "name": "target",
            "description": "Target location in the workcell that the plate is currently at.",
            "type": "str",
            "required": true
          },
          {
            "name": "lid_height",
            "description": "Lid height of the target plate.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Rotation of plate at target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      },
      {
        "name": "replace_lid",
        "description": "This action places a lid on a plate with no lid.",
        "args": [
          {
            "name": "target",
            "description": "Target location in workcell that plate is currently at.",
            "type": "str",
            "required": true
          },
          {
            "name": "lid_height",
            "description": "Lid height of the target plate.",
            "type": "str",
            "required": true
          },
          {
            "name": "target_plate_rotation",
            "description": "Rotation of plate at target location in the workcell.",
            "type": "str",
            "required": true
          }
        ]
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Hidex",
    "tags": ["data_acquisition", "plate_reader"],
    "model": "Hidex Sense Microplate Reader",
    "interface": "wei_rest_node",
    "version": "0.2.0",
    "description": "Module for automating the hidex platereader.",
    "github":"https://github.com/AD-SDL/hidex_module/tree/main",
    "actions": [
      {
        "name": "open",
        "args": [],
        "files": []
      },
      {
        "name": "close",
        "args": [],
        "files": []
      },
      {
        "name": "run_assay",
        "args": [
          {
            "name": "assay_name",
            "type": "str",
            "default": null,
            "required": true,
            "description": "Name of the assay to run"
          }
        ],
        "files": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Hudson Platecrane",
    "tags": ["plate_handling", "plate_mover"],
    "description": "Platecrane is a robotic arm module that can pick up and move plates between locations.",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github": "https://github.com/AD-SDL/hudson_platecrane_module/tree/main",
    "actions": [
      {
        "name": "transfer",
        "description": "This action picks up a plate from one location and transfers it to another.",
        "args": [
          {
            "name": "source",
            "description": "The workcell location to grab the plate from",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "target",
            "description": "The workcell location to put the plate at",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "plate_type",
            "description": "Type of plate.",
            "type": "str",
            "required": false,
            "default": "96_well"
          }
        ]
      },
      {
        "name": "remove_lid",
        "description": "This action picks up a plate's lid from one location and places it at another.",
        "args": [
          {
            "name": "source",
            "description": "The workcell location to grab the lid from",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "target",
            "description": "The workcell location to put the lid",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "plate_type",
            "description": "Type of plate.",
            "type": "str",
            "required": false,
            "default": "96_well"
          }
        ]
      },
      {
        "name": "replace_lid",
        "description": "This action picks up an unattached plate lid and places it on a plate.",
        "args": [
          {
            "name": "source",
            "description": "The workcell location to grab the lid from",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "target",
            "description": "The workcell location to put the lid",
            "type": "List[float], str",
            "required": true
          },
          {
            "name": "plate_type",
            "description": "Type of plate.",
            "type": "str",
            "required": false,
            "default": "96_well"
          }
        ]
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Sealer Robot",
    "tags": ["plate_handling", "plate_sealer"],
    "description": "Sealer is a robot module that can seal plates.",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github": "https://github.com/AD-SDL/a4s_sealer_module/tree/main",
    "actions": [
      {
        "name": "seal",
        "description": "This action seals a plate that is currently in the sealer robot.",
        "args": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Brooks Xpeel",
    "tags": ["plate_handling", "plate_peeler"],
    "description": "Brooks Xpeel is a module that can peel covers off plates.",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github": "https://github.com/AD-SDL/brooks_xpeel_module/tree/main",
    "actions": [
      {
        "name": "peel",
        "description": "This action peels a plate that is currently in the peeling station.",
        "args": []
      }
    ],
    "resource_pools": []
  },
  {
    "name": "Opentrons OT2",
    "model": "Opentrons OT2",
    "tags": ["liquid handling"],
    "description": "Opentrons OT2 Liquidhandling robot",
    "interface": "wei_rest_node",
    "version": "extract_version(Path(__file__).parent.parent / \"pyproject.toml\")",
    "github": "https://github.com/AD-SDL/ot2_module/tree/main",
    "actions": [
      {
        "name": "run_protocol",
        "description": "Runs an Opentrons protocol (either python or YAML) on the connected OT2.",
        "args": [
          {
            "name": "resource_path",
            "description": "Not currently implemented.",
            "type": "[str, Path]",
            "required": false,
            "default": null
          },
          {
            "name": "use_existing_resources",
            "description": "Whether or not to use the existing resources file (essentially, whether we've restocked or not).",
            "type": "bool",
            "required": false,
            "default": false
          }
        ],
        "files": [
          {
            "name": "protocol",
            "required": true,
            "description": "A protocol file to be run (either python or YAML) on the connected OT2."
          }
        ]
      }
    ],
    "resource_pools": []
  }
  
  
  
  
  
  

  
  
  
  
  
  
]
